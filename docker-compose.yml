version: '3.2'
services:
    nginx:
        image: nginx:latest
        volumes:
            - ./docker/nginx/hosts:/etc/nginx/conf.d
            - ./docker/nginx/ssl:/etc/nginx/ssl
            - ./logs/nginx:/var/log/nginx
        ports:
            - "443:443"
            - "80:80"
        links:
            - php
    php:
        build:
            context: ./
            dockerfile: docker/php-fpm/php-fpm.docker
        volumes:
            - ../:/var/www
        links:
            - mysql
            - redis
            - elasticsearch
        environment:
            DB_PORT: "3306"
            DB_HOST: "mysql"
            REDIS_PORT: "6379"
            REDIS_HOST: "redis"
            ELASTICSEARCH_HOSTS: "elasticsearch:9200"
        working_dir: /var/www
    apache-php:
        build:
            context: ./
            dockerfile: docker/apache-php/apache-php.docker
        ports:
            - "8081:80"
            - "4431:443"
        volumes:
            - ../:/var/www
            - ./docker/apache-php/hosts:/etc/apache2/sites-enabled
            - ./docker/apache-php/logs:/var/log/apache2
            - ./docker/apache-php/ssl:/usr/home/ssl
        links:
            - mysql
            - redis
            - elasticsearch
        environment:
            - "DB_PORT=3306"
            - "DB_HOST=mysql"
            - "REDIS_PORT=6379"
            - "REDIS_HOST=redis"
            - "ELASTICSEARCH_HOSTS=elasticsearch:9200"
        working_dir: /var/www
    mysql:
        image: mysql:5.7
        volumes:
            - ./mysql:/var/lib/mysql
            - ../:/var/www
        environment:
            - "MYSQL_ROOT_PASSWORD=secret"
            - "MYSQL_USER=app"
            - "MYSQL_PASSWORD=secret"
            - "MYSQL_DATABASE=app"
        ports:
            - "3306:3306"
    mongo: 
        image: mongo:3
        ports:
            - "27017:27017"
        volumes:
            - ./mongo:/data/db
    redis:
        image: redis:3.0
        ports:
            - "6379:6379"
    node:
        build:
            context: ./
            dockerfile: docker/node8/node8.docker
        volumes:
            - ../:/var/www
        working_dir: /var/www
        tty: true
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
        environment:
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./elasticsearch:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
